{"version":3,"file":"static/js/451.e6816da0.chunk.js","mappings":"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","sources":["webpack://react-01/./src/components/Profile/MyPosts/MyPost.module.css?8a86","webpack://react-01/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-01/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPost_postsBlock__dVMrT\",\"posts\":\"MyPost_posts__GSjpk\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__cp4l0\",\"item\":\"Post_item__bsTZW\"};","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n    <div className={classes.item}>\r\n      <img src='https://i.ibb.co/wBw2TxY/prelest.jpg'></img>\r\n      {props.text}\r\n      <div>\r\n        <span>Like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nimport classes from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let onAddNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  let postsElements = props.posts\r\n    .map(post => <Post text={post.text} likesCount={post.likesCount} />)\r\n\r\n  return (\r\n\r\n    < div className={classes.postsBlock} >\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddNewPost} />\r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </ div>\r\n  )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText' validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'addNewPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\n\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__i3jdn\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\tstatusInputRef = React.createRef();\r\n\r\n\tstate = {\r\n\t\teditMode: false,\r\n\t\tstatus: this.props.status\r\n\t}\r\n\r\n\tactivateEditMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode: true\r\n\t\t})\r\n\t}\r\n\r\n\tdeactivateEditMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode: false\r\n\t\t})\r\n\t\tthis.props.updateStatus(this.state.status);\r\n\t}\r\n\r\n\tonStatusChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tstatus: e.currentTarget.value\r\n\t\t})\r\n\t}\r\n\r\n\t// componentDidUpdate(prevProps, prevState) {\r\n\t// \tif (prevProps.status !== this.props.status) {\r\n\t// \t\tthis.setState({\r\n\t// \t\t\tstatus: this.props.status\r\n\t// \t\t})\r\n\t// \t}\r\n\t// }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{!this.state.editMode &&\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span onDoubleClick={this.activateEditMode}>{this.props.status || '-----'}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.editMode &&\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div >\r\n\t\t)\r\n\t}\r\n}\r\nexport default ProfileStatus;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatusWhithHooks = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange}\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\t\tvalue={status} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWhithHooks;","import Preloader from '../../common/Preloader/preloader';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWhithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src='https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg'></img>\r\n      </div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWhithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\nexport default Profile;","import Profile from './Profile';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.isAuth,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter)(ProfileContainer)\r\n"],"names":["props","className","classes","src","text","likesCount","MyPosts","React","postsElements","posts","map","post","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"sourceRoot":""}